jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install Root Dependencies
        run: npm install # Installs all monorepo dependencies

      - name: Build data-api application
        run: npx nx build data-api --configuration=production # Uses the nx:run-commands executor

      # --- Corrected Zipping Step ---
      - name: Zip artifact for deployment
        run: |
          echo "Listing root directory contents..."
          ls -la
          echo "Listing apps/data-api directory contents..."
          ls -la apps/data-api
          echo "Attempting to navigate to build output directory: apps/data-api/dist"
          cd apps/data-api/dist # Corrected path
          echo "Current directory after cd: $(pwd)"
          echo "Zipping contents..."
          # Zip contents from the correct dist directory, saving zip to root
          zip -r ../../../release.zip ./* ./.env*
          echo "Zip command finished."
          cd ../../.. # Go back to the root directory
          echo "Current directory after returning to root: $(pwd)"
          echo "Checking for release.zip:"
          ls -la release.zip

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app # Artifact name
          path: release.zip # Path to the zipped build output at the root

  # --- deploy job remains the same as the previous correction ---
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app # Use the same artifact name

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_26CB6D6B18C24D1589557AE42CD8985D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C59C17796032408E863A825F7FF242AA }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_66C8EAD4B38F49CBBFCCC3BC0C13BBF0 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'vinylplatz-api'
          slot-name: 'Production' # Consider using a staging slot first
          package: release.zip # Deploy the ZIP file directly
